#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook Telegram –±–æ—Ç–∞
"""
import os
import requests
import sys

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
BOT_TOKEN = os.environ.get('BOT_TOKEN', '7052592700:AAEzgL-EsnETAuXhJZPBA6vSLHXgxkKIeOU')

def get_bot_info():
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getMe"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()['result']
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {response.text}")
        return None

def delete_webhook():
    """–£–¥–∞–ª—è–µ–º webhook"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook"
    response = requests.post(url)
    if response.status_code == 200:
        print("‚úÖ Webhook —É–¥–∞–ª–µ–Ω")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {response.text}")
        return False

def set_webhook(webhook_url):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook"
    data = {
        'url': webhook_url,
        'allowed_updates': ['message', 'callback_query']
    }
    response = requests.post(url, json=data)
    if response.status_code == 200:
        result = response.json()
        if result.get('ok'):
            print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description')}")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.text}")
        return False

def get_webhook_info():
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º webhook"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getWebhookInfo"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()['result']
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: {response.text}")
        return None

def main():
    print("ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    bot_info = get_bot_info()
    if bot_info:
        print(f"üì± –ë–æ—Ç: @{bot_info['username']} ({bot_info['first_name']})")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π webhook
    webhook_info = get_webhook_info()
    if webhook_info and webhook_info.get('url'):
        print(f"üîó –¢–µ–∫—É—â–∏–π webhook: {webhook_info['url']}")
    else:
        print("üîó Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook")
    print("2. –£–¥–∞–ª–∏—Ç—å webhook")
    print("3. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook")
    print("4. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
    
    if choice == "1":
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL –¥–ª—è webhook
        print("\nüìù –í–≤–µ–¥–∏—Ç–µ URL –¥–ª—è webhook:")
        print("–ü—Ä–∏–º–µ—Ä: https://–≤–∞—à-–¥–æ–º–µ–Ω.amvera.ru/webhook")
        webhook_url = input("URL: ").strip()
        
        if webhook_url:
            # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
            delete_webhook()
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π
            set_webhook(webhook_url)
        else:
            print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
    
    elif choice == "2":
        delete_webhook()
    
    elif choice == "3":
        webhook_info = get_webhook_info()
        if webhook_info:
            print(f"\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
            print(f"URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            print(f"–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
            print(f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {webhook_info.get('last_error_date', '–ù–µ—Ç')}")
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {webhook_info.get('pending_update_count', 0)}")
    
    elif choice == "4":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        sys.exit(0)
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main() 